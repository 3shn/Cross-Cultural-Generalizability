for (i in 1:K){
Rho[i,i] = 1;
}
return S*cholesky_decompose(Rho);
}
}
data {
int N;
int MA;
int age[N];
int outcome[N];
int gender[N];
int<lower = 0> P[2,MA];   // Here we enter data matrix with demographic constitution of target population
}
parameters {
real alpha;
matrix[2,MA] age_effect;    //Vector for GP age effects
real<lower=0> eta;
real<lower=0> sigma;
real<lower=0, upper=1> rho;
}
model {
vector[N] p;
alpha ~ normal(0, 3);
eta ~ exponential(1);
sigma ~ exponential(1);
rho ~ beta(5, 1);
age_effect[1,] ~ multi_normal_cholesky( rep_vector(0, MA) , GPL(MA, rho, eta, sigma) );
age_effect[2,] ~ multi_normal_cholesky( rep_vector(0, MA) , GPL(MA, rho, eta, sigma) );
for ( i in 1:N ) {
p[i] = alpha + age_effect[gender[i],age[i]];
}
outcome ~ binomial_logit(1, p);
}
generated quantities{
real expect_pos = 0;
real<lower = 0, upper = 1> phi;  // This is value for p in the target population
int total = 0;
vector[MA] pred_p_m;
vector[MA] pred_p_f;
for (a in 1:2)
for (b in 1:MA){
total += P[a,b];
expect_pos += P[a,b] * inv_logit(alpha + age_effect[a,b]);
}
phi = expect_pos / total;
pred_p_m = inv_logit(alpha + age_effect[1,]');
pred_p_f = inv_logit(alpha + age_effect[2,]');
}
"
}
m_GP_Gender2 <- stan( model_code  = MRP_GP_gender_int , data=d ,iter = 2000, cores = 1, seed=1, chains=1, control = list(adapt_delta=0.9, max_treedepth = 13))
par(mfrow = c(1,2))
samp <- extract.samples(m_GP_Gender2)
samp_pred_p <- apply(samp$pred_p_m,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:MA) %in% ages_2_drop,"Unobserved Age","Observed Age")
plot(pred_p_m, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2)
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:MA, y0 = Lower, x1=  1:MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
legend("topright", c("Observed", "Unobserved"), col = c("black", "blue"), lwd = 4, lty=1, bty="n")
samp_pred_p <- apply(samp$pred_p_f,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:MA) %in% ages_2_drop,"Unobserved Age","Observed Age")
plot(pred_p_f, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2)
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:MA, y0 = Lower, x1=  1:MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
plot(pred_p_m, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Male")
par(mfrow = c(1,2))
samp <- extract.samples(m_GP_Gender2)
samp_pred_p <- apply(samp$pred_p_m,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:MA) %in% ages_2_drop,"Unobserved Age","Observed Age")
plot(pred_p_m, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Male")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:MA, y0 = Lower, x1=  1:MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
legend("topright", c("Observed", "Unobserved"), col = c("black", "blue"), lwd = 4, lty=1, bty="n")
samp_pred_p <- apply(samp$pred_p_f,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:MA) %in% ages_2_drop,"Unobserved Age","Observed Age")
plot(pred_p_f, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Male")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:MA, y0 = Lower, x1=  1:MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
par(mfrow = c(1,2))
samp <- extract.samples(m_GP_Gender2)
samp_pred_p <- apply(samp$pred_p_m,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:MA) %in% ages_2_drop,"Unobserved Age","Observed Age")
plot(pred_p_m, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Male")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:MA, y0 = Lower, x1=  1:MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
legend("topright", c("Observed", "Unobserved"), col = c("black", "blue"), lwd = 4, lty=1, bty="n")
samp_pred_p <- apply(samp$pred_p_f,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:MA) %in% ages_2_drop,"Unobserved Age","Observed Age")
plot(pred_p_f, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Female")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:MA, y0 = Lower, x1=  1:MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
#Include Gender
N <- 600
MA <- 60
age = round(runif(N, 1,MA))
gender <- sample(c(1,2), size = N, replace = TRUE)
# Age distribution in target population
pred_p_m <- logistic(1.95*sin(seq(0,6, length.out=MA)) -2)
pred_p_f <- logistic(1.95*sin(seq(0,6, length.out=MA)) + 2)
outcome <- rep(NA,N)
for(i in 1:N){
if (gender[i] == 1){
outcome[i] <- rbinom(1, 1,  pred_p_m[age[i]] )
} else {
outcome[i] <- rbinom(1, 1,  pred_p_f[age[i]] )
}
}
d<-data.frame(age=age, gender = gender, outcome=outcome)
ages_2_drop <- 1000#c(5,6, 13,14,15, 27,28, 37,39, 46:MA)
d2 <- d#[-which(d$age %in% ages_2_drop),]
N2 <- nrow(d2)
d <- list(N = N2,
MA = MA,
gender = d2$gender,
age = d2$age,
outcome = d2$outcome
)
d$P <- matrix(0, nrow = 2, ncol = MA)
d$P[1, 20:40] <- 100
d$P[2, 41:60] <- 100
m_GP_Gender2 <- stan( model_code  = MRP_GP_gender_int , data=d ,iter = 2000, cores = 1, seed=1, chains=1, control = list(adapt_delta=0.9, max_treedepth = 13))
par(mfrow = c(1,2))
samp <- extract.samples(m_GP_Gender2)
samp_pred_p <- apply(samp$pred_p_m,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:MA) %in% ages_2_drop,"Unobserved Age","Observed Age")
plot(pred_p_m, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Male")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:MA, y0 = Lower, x1=  1:MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
legend("topright", c("Observed", "Unobserved"), col = c("black", "blue"), lwd = 4, lty=1, bty="n")
samp_pred_p <- apply(samp$pred_p_f,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:MA) %in% ages_2_drop,"Unobserved Age","Observed Age")
plot(pred_p_f, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Female")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:MA, y0 = Lower, x1=  1:MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
N <- 80
MA <- 60
age = round(runif(N, 1,MA))
gender <- sample(c(1,2), size = N, replace = TRUE)
# Age distribution in target population
pred_p_m <- logistic(1.95*sin(seq(0,6, length.out=MA)) -2)
pred_p_f <- logistic(1.95*sin(seq(0,6, length.out=MA)) + 2)
outcome <- rep(NA,N)
for(i in 1:N){
if (gender[i] == 1){
outcome[i] <- rbinom(1, 1,  pred_p_m[age[i]] )
} else {
outcome[i] <- rbinom(1, 1,  pred_p_f[age[i]] )
}
}
d<-data.frame(age=age, gender = gender, outcome=outcome)
ages_2_drop <- 1000#c(5,6, 13,14,15, 27,28, 37,39, 46:MA)
d2 <- d#[-which(d$age %in% ages_2_drop),]
N2 <- nrow(d2)
d <- list(N = N2,
MA = MA,
gender = d2$gender,
age = d2$age,
outcome = d2$outcome
)
d$P <- matrix(0, nrow = 2, ncol = MA)
d$P[1, 20:40] <- 100
d$P[2, 41:60] <- 100
#Interaction
{
MRP_GP_gender_int <- "
functions{
matrix GPL(int K, real C, real D, real S){
matrix[K,K] Rho;
real KR;
KR = K;
for(i in 1:(K-1)){
for(j in (i+1):K){
Rho[i,j] = C * exp(-D * ( (j-i)^2 / KR^2) );
Rho[j,i] = Rho[i,j];
}}
for (i in 1:K){
Rho[i,i] = 1;
}
return S*cholesky_decompose(Rho);
}
}
data {
int N;
int MA;
int age[N];
int outcome[N];
int gender[N];
int<lower = 0> P[2,MA];   // Here we enter data matrix with demographic constitution of target population
}
parameters {
real alpha;
matrix[2,MA] age_effect;    //Vector for GP age effects
real<lower=0> eta;
real<lower=0> sigma;
real<lower=0, upper=1> rho;
}
model {
vector[N] p;
alpha ~ normal(0, 3);
eta ~ exponential(1);
sigma ~ exponential(1);
rho ~ beta(5, 1);
age_effect[1,] ~ multi_normal_cholesky( rep_vector(0, MA) , GPL(MA, rho, eta, sigma) );
age_effect[2,] ~ multi_normal_cholesky( rep_vector(0, MA) , GPL(MA, rho, eta, sigma) );
for ( i in 1:N ) {
p[i] = alpha + age_effect[gender[i],age[i]];
}
outcome ~ binomial_logit(1, p);
}
generated quantities{
real expect_pos = 0;
real<lower = 0, upper = 1> phi;  // This is value for p in the target population
int total = 0;
vector[MA] pred_p_m;
vector[MA] pred_p_f;
for (a in 1:2)
for (b in 1:MA){
total += P[a,b];
expect_pos += P[a,b] * inv_logit(alpha + age_effect[a,b]);
}
phi = expect_pos / total;
pred_p_m = inv_logit(alpha + age_effect[1,]');
pred_p_f = inv_logit(alpha + age_effect[2,]');
}
"
}
m_GP_Gender2 <- stan( model_code  = MRP_GP_gender_int , data=d ,iter = 2000, cores = 1, seed=1, chains=1, control = list(adapt_delta=0.9, max_treedepth = 13))
par(mfrow = c(1,2))
samp <- extract.samples(m_GP_Gender2)
samp_pred_p <- apply(samp$pred_p_m,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:MA) %in% ages_2_drop,"Unobserved Age","Observed Age")
plot(pred_p_m, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Male")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:MA, y0 = Lower, x1=  1:MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
legend("topright", c("Observed", "Unobserved"), col = c("black", "blue"), lwd = 4, lty=1, bty="n")
samp_pred_p <- apply(samp$pred_p_f,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:MA) %in% ages_2_drop,"Unobserved Age","Observed Age")
plot(pred_p_f, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Female")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:MA, y0 = Lower, x1=  1:MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
#Include Gender
N <- 120
MA <- 60
age = round(runif(N, 1,MA))
gender <- sample(c(1,2), size = N, replace = TRUE)
# Age distribution in target population
pred_p_m <- logistic(1.95*sin(seq(0,6, length.out=MA)) -2)
pred_p_f <- logistic(1.95*sin(seq(0,6, length.out=MA)) + 2)
outcome <- rep(NA,N)
for(i in 1:N){
if (gender[i] == 1){
outcome[i] <- rbinom(1, 1,  pred_p_m[age[i]] )
} else {
outcome[i] <- rbinom(1, 1,  pred_p_f[age[i]] )
}
}
d<-data.frame(age=age, gender = gender, outcome=outcome)
ages_2_drop <- 1000#c(5,6, 13,14,15, 27,28, 37,39, 46:MA)
d2 <- d#[-which(d$age %in% ages_2_drop),]
N2 <- nrow(d2)
d <- list(N = N2,
MA = MA,
gender = d2$gender,
age = d2$age,
outcome = d2$outcome
)
d$P <- matrix(0, nrow = 2, ncol = MA)
d$P[1, 20:40] <- 100
d$P[2, 41:60] <- 100
#Interaction
{
MRP_GP_gender_int <- "
functions{
matrix GPL(int K, real C, real D, real S){
matrix[K,K] Rho;
real KR;
KR = K;
for(i in 1:(K-1)){
for(j in (i+1):K){
Rho[i,j] = C * exp(-D * ( (j-i)^2 / KR^2) );
Rho[j,i] = Rho[i,j];
}}
for (i in 1:K){
Rho[i,i] = 1;
}
return S*cholesky_decompose(Rho);
}
}
data {
int N;
int MA;
int age[N];
int outcome[N];
int gender[N];
int<lower = 0> P[2,MA];   // Here we enter data matrix with demographic constitution of target population
}
parameters {
real alpha;
matrix[2,MA] age_effect;    //Vector for GP age effects
real<lower=0> eta;
real<lower=0> sigma;
real<lower=0, upper=1> rho;
}
model {
vector[N] p;
alpha ~ normal(0, 3);
eta ~ exponential(1);
sigma ~ exponential(1);
rho ~ beta(5, 1);
age_effect[1,] ~ multi_normal_cholesky( rep_vector(0, MA) , GPL(MA, rho, eta, sigma) );
age_effect[2,] ~ multi_normal_cholesky( rep_vector(0, MA) , GPL(MA, rho, eta, sigma) );
for ( i in 1:N ) {
p[i] = alpha + age_effect[gender[i],age[i]];
}
outcome ~ binomial_logit(1, p);
}
generated quantities{
real expect_pos = 0;
real<lower = 0, upper = 1> phi;  // This is value for p in the target population
int total = 0;
vector[MA] pred_p_m;
vector[MA] pred_p_f;
for (a in 1:2)
for (b in 1:MA){
total += P[a,b];
expect_pos += P[a,b] * inv_logit(alpha + age_effect[a,b]);
}
phi = expect_pos / total;
pred_p_m = inv_logit(alpha + age_effect[1,]');
pred_p_f = inv_logit(alpha + age_effect[2,]');
}
"
}
m_GP_Gender2 <- stan( model_code  = MRP_GP_gender_int , data=d ,iter = 2000, cores = 1, seed=1, chains=1, control = list(adapt_delta=0.9, max_treedepth = 13))
par(mfrow = c(1,2))
samp <- extract.samples(m_GP_Gender2)
samp_pred_p <- apply(samp$pred_p_m,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:MA) %in% ages_2_drop,"Unobserved Age","Observed Age")
plot(pred_p_m, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Male")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:MA, y0 = Lower, x1=  1:MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
legend("topright", c("Observed", "Unobserved"), col = c("black", "blue"), lwd = 4, lty=1, bty="n")
samp_pred_p <- apply(samp$pred_p_f,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:MA) %in% ages_2_drop,"Unobserved Age","Observed Age")
plot(pred_p_f, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Female")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:MA, y0 = Lower, x1=  1:MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
# Try to do simple MRP with real data
# If we want to compare distribution of trait, we need to account for demographic makeup
library(rethinking)
setwd("~/GitHub/Cross_Cultural_Generalizability")
data_adult <- read.csv("House_data/Model_1a_1b_1c_data.csv")
data_adult <- data_adult[,c("SUBJECT_ID","GENDER_1female","fieldid", "AGE_in_years","T1_ad_choice_1yes")]
data_adult$choice <- data_adult$T1_ad_choice_1yes
data_adult$T1_ad_choice_1yes <- NULL
data_children <- read.csv("House_data/Model_4a_4b_4c_4d_data.csv")
data_children <- data_children[,c("SUBJECT_ID","GENDER_1female","fieldid", "AGE_in_years","T1_choice_1yes")]
data_children$choice <- data_children$T1_choice_1yes
data_children$T1_choice_1yes <- NULL
data_comb <- rbind(data_children, data_adult)
data_comb <- data_comb[with(data_comb, order(data_comb$fieldid, data_comb$AGE_in_years)),]
data_comb <- data_comb[which(data_comb$fieldid == 1),]
d  <- list(y = data_comb$choice,
ind_id = sapply(1:nrow(data_comb), function (i) which(unique(data_comb$SUBJECT_ID) == data_comb$SUBJECT_ID[i])),
soc_id = data_comb$fieldid,
age = round(data_comb$AGE_in_years),
gender = as.integer(data_comb$GENDER_1female +1), # 2 female now
N = nrow(data_comb),
N_age = 9,
MA = max(round(data_comb$AGE_in_years))
)
#Here we specify age distribution in target population that we use for weighting
d$P <- rep(0, 71)
d$P[40:60] <- 100
# Gaussian Process on age
{
m1_MRP_GP <- "
functions{
matrix GPL(int K, real C, real D, real S){
matrix[K,K] Rho;
real KR;
KR = K;
for(i in 1:(K-1)){
for(j in (i+1):K){
Rho[i,j] = C * exp(-D * ( (j-i)^2 / KR^2) );
Rho[j,i] = Rho[i,j];
}}
for (i in 1:K){
Rho[i,i] = 1;
}
return S*cholesky_decompose(Rho);
}
}
data {
int N;
int MA;
int age[N];
int y[N];
int<lower = 0> P[MA];   // Here we enter data matrix with demographic constitution of target population
}
parameters {
real alpha;
vector[MA] age_effect;    //Vector for GP age effects
real<lower=0> eta;
real<lower=0> sigma;
real<lower=0, upper=1> rho;
}
model {
vector[N] p;
alpha ~ normal(0, 3);
eta ~ exponential(1);
sigma ~ exponential(1);
rho ~ beta(10, 1);
age_effect ~ multi_normal_cholesky( rep_vector(0, MA) , GPL(MA, rho, eta, sigma) );
for ( i in 1:N ) {
p[i] = alpha + age_effect[age[i]];
}
y ~ binomial_logit(1, p);
}
generated quantities{
real expect_pos = 0;
real<lower = 0, upper = 1> phi;  // This is value for p in the target population
int total = 0;
vector[MA] pred_p;
for (b in 1:MA){
total += P[b];
expect_pos += P[b] * inv_logit(alpha + age_effect[b]);
}
phi = expect_pos / total;
pred_p = inv_logit(alpha + age_effect);
}
"
}
m1 <- stan( model_code  = m1_MRP_GP , data=d ,iter = 2000, cores = 1, seed=1, chains=1, control = list(adapt_delta=0.9, max_treedepth = 13))
precis(m1)
precis(m1,2)
#Extract samples and plot predictions
samp <- extract.samples(m1)
samp_pred_p <- apply(samp$pred_p,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:MA) %in% ages_2_drop,"Unobserved Age","Observed Age")
plot(pred_p, type = "l", xlim = c(0,73), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2)
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:MA, y0 = Lower, x1=  1:MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
legend("topright", c("Observed", "Unobserved"), col = c("black", "blue"), lwd = 4, lty=1, bty="n")
#Extract samples and plot predictions
samp <- extract.samples(m1)
samp_pred_p <- apply(samp$pred_p,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
plot(pred_p, type = "l", xlim = c(0,73), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2)
pred_p <- logistic(1.95*sin(seq(0,6, length.out=MA)))   #Prob of choosing 1 for different ages
# Model 1: Gaussian process on age
##
###
#Simulate data
N <- 400
MA <- 60    #Max Age
age = round(runif(N, 1,MA))
pred_p <- logistic(1.95*sin(seq(0,6, length.out=MA)))   #Prob of choosing 1 for different ages
plot(pred_p, type = "l", xlab = "Age")
y <- rep(NA,N)
plot(pred_p_m, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Male")
plot(pred_p, type = "l", xlim = c(0,73), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2)
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
Observed <- ifelse(c(1:MA) %in% ages_2_drop,"Unobserved Age","Observed Age")
#Drop data from certain age groups
ages_2_drop <- c(5,6, 13,14,15, 27,28, 37,39, 46:55)
Observed <- ifelse(c(1:MA) %in% ages_2_drop,"Unobserved Age","Observed Age")
plot(pred_p, type = "l", xlim = c(0,73), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2)
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:MA, y0 = Lower, x1=  1:MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
