####
#Create population array [pop, sex, age]
D <- array(NA,c(2,2,length(Age_range)))
age_seq <- seq(0, 100, 1)
#Exponential distribution (similar to many growing populations)
D[1,1, ] <- dexp(age_seq, 0.03)[Age_range]
D[1,2, ] <- dexp(age_seq, 0.03)[Age_range]
#Skewed normal distribution (similar to many shrinking populations)
D[2,1, ] <- dsn(X, xi = 10, omega = 50, alpha = 1)[Age_range]
D[2,2, ] <- dsn(X, xi = 10, omega = 50, alpha = 1)[Age_range]
par(mfrow = c(1,2))
plot(X, dexp(X,0.03), type = "l", xlim = c(0,100), ylab= "Density", xlab = "Age")
plot(X, dsn(X, xi = 10, omega = 50, alpha = 1), type = "l", xlim = c(0,100), ylab= "Density", xlab = "Age")
#Generate data
d <- data.frame(id = 1:(2*N), soc_id = c(rep(1,N), rep(2,N)), age = NA, gender = NA, outcome = NA)
#Simulate ages from above distributions
for (pop_id in 1:2) {
d$age[d$soc_id==pop_id] <- sample(Age_range, N, replace = TRUE, prob = D[pop_id,1,])
}
#Simulate Genders
d$gender[d$soc_id==1] <- sample(c(1,2),N, replace = TRUE, prob = c(0.55, 0.45))
d$gender[d$soc_id==2] <- sample(c(1,2),N, replace = TRUE, prob = c(0.45, 0.55))
b_age <- 2
b_gender <- 5
#Generate observations
for(i in 1:(2*N)) d$outcome[i] <- rbinom(1, 1, inv_logit(b_age*standardize(d$age)[i] + b_gender * (d$gender[i]-1)  ) )
d1 <- list(N = N,
MA = max(d$age[d$soc_id==1]),
gender = d$gender[d$soc_id==1],
age = d$age[d$soc_id==1],
outcome = d$outcome[d$soc_id==1]
)
d1$P <- matrix(0, nrow = 2, ncol = d1$MA)
d1$P[1, 10:30] <- 1000  # Male
d1$P[2, 41:60] <- 5  # Female
{
m2a_MRP_GP_gender_same <- "
functions{
matrix GPL(int K, real C, real D, real S){
matrix[K,K] Rho;
real KR;
KR = K;
for(i in 1:(K-1)){
for(j in (i+1):K){
Rho[i,j] = C * exp(-D * ( (j-i)^2 / KR^2) );
Rho[j,i] = Rho[i,j];
}}
for (i in 1:K){
Rho[i,i] = 1;
}
return S*cholesky_decompose(Rho);
}
}
data {
int N;
int MA;
int age[N];
int outcome[N];
int gender[N];
int<lower = 0> P[2,MA];   // Here we enter data matrix with demographic constitution of target population
}
parameters {
vector[2] alpha;
matrix[2,MA] age_effect;    //Matrix for GP age effects
real<lower=0> eta;
real<lower=0> sigma;
real<lower=0, upper=1> rho;
}
model {
vector[N] p;
alpha ~ normal(0, 1);
eta ~ exponential(2);
sigma ~ exponential(1);
rho ~ beta(10, 1);
for ( i in 1:2){
age_effect[i,] ~ multi_normal_cholesky( rep_vector(0, MA) , GPL(MA, rho, eta, sigma) );
}
for ( i in 1:N ) {
p[i] = alpha[gender[i]] + age_effect[gender[i],age[i]];
}
outcome ~ binomial_logit(1, p);
}
generated quantities{
real expect_pos = 0;
real<lower = 0, upper = 1> phi;  // This is value for p in the target population
int total = 0;
vector[MA] pred_p_m;
vector[MA] pred_p_f;
for (a in 1:2)
for (b in 1:MA){
total += P[a,b];
expect_pos += P[a,b] * inv_logit(alpha[a] + age_effect[a,b]);
}
phi = expect_pos / total;
pred_p_m = inv_logit(alpha[1] + age_effect[1,]');
pred_p_f = inv_logit(alpha[2] + age_effect[2,]');
}
"
}
m1a <- stan( model_code  = m2a_MRP_GP_gender_same , data=d1 ,iter = 2000, cores = 1, seed=1, chains=1, control = list(adapt_delta=0.95, max_treedepth = 13))
par(mfrow = c(1,2))
samp <- extract.samples(m1a)
samp_pred_p <- apply(samp$pred_p_m,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:d1$MA) %in% unique(d1$age),"Observed Age","Unobserved Age")
plot(NA, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Male")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:d1$MA, y0 = Lower, x1=  1:d1$MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
legend("topright", c("Observed", "Unobserved"), col = c("black", "blue"), lwd = 4, lty=1, bty="n")
samp_pred_p <- apply(samp$pred_p_f,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:d1$MA) %in% unique(d1$age),"Observed Age","Unobserved Age")
plot(NA, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Female")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:d1$MA, y0 = Lower, x1=  1:d1$MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
precis(m1a)
precis(m1a)
#Generate data
d <- data.frame(id = 1:(2*N), soc_id = c(rep(1,N), rep(2,N)), age = NA, gender = NA, outcome = NA)
#Simulate ages from above distributions
for (pop_id in 1:2) {
d$age[d$soc_id==pop_id] <- sample(Age_range, N, replace = TRUE, prob = D[pop_id,1,])
}
dens(d$age[d$soc_id==1])
dens(d$age[d$soc_id==2])
#Exponential distribution for both populations
D[1,1, ] <- dexp(age_seq, 0.03)[Age_range]
D[1,2, ] <- dexp(age_seq, 0.03)[Age_range]
D[2,1, ] <- dexp(age_seq, 0.03)[Age_range]
D[2,2, ] <- dexp(age_seq, 0.03)[Age_range]
#Generate data
d <- data.frame(id = 1:(2*N), soc_id = c(rep(1,N), rep(2,N)), age = NA, gender = NA, outcome = NA)
#Simulate ages from above distributions
for (pop_id in 1:2) {
d$age[d$soc_id==pop_id] <- sample(Age_range, N, replace = TRUE, prob = D[pop_id,1,])
}
dens(d$age[d$soc_id==1])
dens(d$age[d$soc_id==2])
d$soc_id
d1$P <- matrix(10, nrow = 2, ncol = d1$MA)
d2$P <- matrix(10, nrow = 2, ncol = d1$MA)
d1 <- list(N = N,
MA = max(d$age[d$soc_id==1]),
gender = d$gender[d$soc_id==1],
age = d$age[d$soc_id==1],
outcome = d$outcome[d$soc_id==1]
)
d2 <- list(N = N,
MA = max(d$age[d$soc_id==2]),
gender = d$gender[d$soc_id==2],
age = d$age[d$soc_id==2],
outcome = d$outcome[d$soc_id==2]
)
d1$P <- matrix(10, nrow = 2, ncol = d1$MA)
d2$P <- matrix(10, nrow = 2, ncol = d1$MA)
m2a_MRP_GP_gender_same <- "
functions{
matrix GPL(int K, real C, real D, real S){
matrix[K,K] Rho;
real KR;
KR = K;
for(i in 1:(K-1)){
for(j in (i+1):K){
Rho[i,j] = C * exp(-D * ( (j-i)^2 / KR^2) );
Rho[j,i] = Rho[i,j];
}}
for (i in 1:K){
Rho[i,i] = 1;
}
return S*cholesky_decompose(Rho);
}
}
data {
int N;
int MA;
int age[N];
int outcome[N];
int gender[N];
int<lower = 0> P[2,MA];   // Here we enter data matrix with demographic constitution of target population
}
parameters {
vector[2] alpha;
matrix[2,MA] age_effect;    //Matrix for GP age effects
real<lower=0> eta;
real<lower=0> sigma;
real<lower=0, upper=1> rho;
}
model {
vector[N] p;
alpha ~ normal(0, 1);
eta ~ exponential(2);
sigma ~ exponential(1);
rho ~ beta(10, 1);
for ( i in 1:2){
age_effect[i,] ~ multi_normal_cholesky( rep_vector(0, MA) , GPL(MA, rho, eta, sigma) );
}
for ( i in 1:N ) {
p[i] = alpha[gender[i]] + age_effect[gender[i],age[i]];
}
outcome ~ binomial_logit(1, p);
}
generated quantities{
real expect_pos = 0;
real<lower = 0, upper = 1> phi;  // This is value for p in the target population
int total = 0;
vector[MA] pred_p_m;
vector[MA] pred_p_f;
for (a in 1:2)
for (b in 1:MA){
total += P[a,b];
expect_pos += P[a,b] * inv_logit(alpha[a] + age_effect[a,b]);
}
phi = expect_pos / total;
pred_p_m = inv_logit(alpha[1] + age_effect[1,]');
pred_p_f = inv_logit(alpha[2] + age_effect[2,]');
}
"
# Example 1: Demographic Standardization
# The aim here is to simulate and analyze examplary datasets generated from different processes
# a) Disparities arise only from real demographic differences among populations (e.g. one is older/more men)
# b) Disparities arise only from differences in sampling procedure
# c) Disparities arise from both processes
N <- 500
Age_range <- c(5:90)
####
###
##
# a) Real differences
##
###
####
#Create population array [pop, sex, age]
D <- array(NA,c(2,2,length(Age_range)))
age_seq <- seq(0, 100, 1)
#Exponential distribution (similar to many growing populations)
D[1,1, ] <- dexp(age_seq, 0.03)[Age_range]
D[1,2, ] <- dexp(age_seq, 0.03)[Age_range]
#Skewed normal distribution (similar to many shrinking populations)
D[2,1, ] <- dsn(X, xi = 10, omega = 50, alpha = 1)[Age_range]
D[2,2, ] <- dsn(X, xi = 10, omega = 50, alpha = 1)[Age_range]
par(mfrow = c(1,2))
plot(X, dexp(X,0.03), type = "l", xlim = c(0,100), ylab= "Density", xlab = "Age")
plot(X, dsn(X, xi = 10, omega = 50, alpha = 1), type = "l", xlim = c(0,100), ylab= "Density", xlab = "Age")
#Generate data
d <- data.frame(id = 1:(2*N), soc_id = c(rep(1,N), rep(2,N)), age = NA, gender = NA, outcome = NA)
#Simulate ages from above distributions
for (pop_id in 1:2) {
d$age[d$soc_id==pop_id] <- sample(Age_range, N, replace = TRUE, prob = D[pop_id,1,])
}
#Simulate Genders
d$gender[d$soc_id==1] <- sample(c(1,2),N, replace = TRUE, prob = c(0.55, 0.45))
d$gender[d$soc_id==2] <- sample(c(1,2),N, replace = TRUE, prob = c(0.45, 0.55))
b_age <- 1
b_gender <- 1
b_culture <- 2
#Generate observations
for(i in 1:(2*N)) d$outcome[i] <- rbinom(1, 1, inv_logit(b_age*standardize(d$age)[i] + b_gender*(d$gender[i]-1) + b_culture*(d$soc_id[i]-1)  ) )
d1 <- list(N = N,
MA = max(d$age[d$soc_id==1]),
gender = d$gender[d$soc_id==1],
age = d$age[d$soc_id==1],
outcome = d$outcome[d$soc_id==1]
)
d2 <- list(N = N,
MA = max(d$age[d$soc_id==2]),
gender = d$gender[d$soc_id==2],
age = d$age[d$soc_id==2],
outcome = d$outcome[d$soc_id==2]
)
d1$P <- matrix(10, nrow = 2, ncol = d1$MA)
d2$P <- matrix(10, nrow = 2, ncol = d1$MA)
####
###
##
# b) Differences in samping of ages
##
###
####
#Create population array [pop, sex, age]
D <- array(NA,c(2,2,length(Age_range)))
age_seq <- seq(0, 100, 1)
#Exponential distribution for both populations
D[1,1, ] <- dexp(age_seq, 0.03)[Age_range]
D[1,2, ] <- dexp(age_seq, 0.03)[Age_range]
D[2,1, ] <- dexp(age_seq, 0.03)[Age_range]
D[2,2, ] <- dexp(age_seq, 0.03)[Age_range]
#Generate data
d <- data.frame(id = 1:(2*N), soc_id = c(rep(1,N), rep(2,N)), age = NA, gender = NA, outcome = NA)
#Simulate ages from above distributions
for (pop_id in 1:2) {
d$age[d$soc_id==pop_id] <- sample(Age_range, N, replace = TRUE, prob = D[pop_id,1,])
}
#Simulate Genders
d$gender[d$soc_id==1] <- sample(c(1,2),N, replace = TRUE, prob = c(0.5, 0.5))
d$gender[d$soc_id==2] <- sample(c(1,2),N, replace = TRUE, prob = c(0.5, 0.5))
b_age <- 2
b_gender <- 5
#Generate observations
for(i in 1:(2*N)) d$outcome[i] <- rbinom(1, 1, inv_logit(b_age*standardize(d$age)[i] + b_gender * (d$gender[i]-1)  ) )
d1 <- list(N = N,
MA = max(d$age[d$soc_id==1]),
gender = d$gender[d$soc_id==1],
age = d$age[d$soc_id==1],
outcome = d$outcome[d$soc_id==1]
)
d1$P <- matrix(0, nrow = 2, ncol = d1$MA)
d1$P[1, 10:30] <- 1000  # Male
d1$P[2, 41:60] <- 5  # Female
{
m2a_MRP_GP_gender_same <- "
functions{
matrix GPL(int K, real C, real D, real S){
matrix[K,K] Rho;
real KR;
KR = K;
for(i in 1:(K-1)){
for(j in (i+1):K){
Rho[i,j] = C * exp(-D * ( (j-i)^2 / KR^2) );
Rho[j,i] = Rho[i,j];
}}
for (i in 1:K){
Rho[i,i] = 1;
}
return S*cholesky_decompose(Rho);
}
}
data {
int N;
int MA;
int age[N];
int outcome[N];
int gender[N];
int<lower = 0> P[2,MA];   // Here we enter data matrix with demographic constitution of target population
}
parameters {
vector[2] alpha;
matrix[2,MA] age_effect;    //Matrix for GP age effects
real<lower=0> eta;
real<lower=0> sigma;
real<lower=0, upper=1> rho;
}
model {
vector[N] p;
alpha ~ normal(0, 1);
eta ~ exponential(2);
sigma ~ exponential(1);
rho ~ beta(10, 1);
for ( i in 1:2){
age_effect[i,] ~ multi_normal_cholesky( rep_vector(0, MA) , GPL(MA, rho, eta, sigma) );
}
for ( i in 1:N ) {
p[i] = alpha[gender[i]] + age_effect[gender[i],age[i]];
}
outcome ~ binomial_logit(1, p);
}
generated quantities{
real expect_pos = 0;
real<lower = 0, upper = 1> phi;  // This is value for p in the target population
int total = 0;
vector[MA] pred_p_m;
vector[MA] pred_p_f;
for (a in 1:2)
for (b in 1:MA){
total += P[a,b];
expect_pos += P[a,b] * inv_logit(alpha[a] + age_effect[a,b]);
}
phi = expect_pos / total;
pred_p_m = inv_logit(alpha[1] + age_effect[1,]');
pred_p_f = inv_logit(alpha[2] + age_effect[2,]');
}
"
}
m11 <- stan( model_code  = m2a_MRP_GP_gender_same , data=d1 ,iter = 2000, cores = 1, seed=1, chains=1, control = list(adapt_delta=0.95, max_treedepth = 13))
m12 <- stan( model_code  = m2a_MRP_GP_gender_same , data=d2 ,iter = 2000, cores = 1, seed=1, chains=1, control = list(adapt_delta=0.95, max_treedepth = 13))
d2$P <- matrix(10, nrow = 2, ncol = d2$MA)
m12 <- stan( model_code  = m2a_MRP_GP_gender_same , data=d2 ,iter = 2000, cores = 1, seed=1, chains=1, control = list(adapt_delta=0.95, max_treedepth = 13))
par(mfrow = c(1,2))
samp <- extract.samples(m11)
samp_pred_p <- apply(samp$pred_p_m,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:d1$MA) %in% unique(d1$age),"Observed Age","Unobserved Age")
plot(NA, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Male")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:d1$MA, y0 = Lower, x1=  1:d1$MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
legend("topright", c("Observed", "Unobserved"), col = c("black", "blue"), lwd = 4, lty=1, bty="n")
samp_pred_p <- apply(samp$pred_p_f,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:d1$MA) %in% unique(d1$age),"Observed Age","Unobserved Age")
plot(NA, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Female")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:d1$MA, y0 = Lower, x1=  1:d1$MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
par(mfrow = c(1,2))
samp <- extract.samples(m12)
samp_pred_p <- apply(samp$pred_p_m,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:d1$MA) %in% unique(d1$age),"Observed Age","Unobserved Age")
plot(NA, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Male")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:d1$MA, y0 = Lower, x1=  1:d1$MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
legend("topright", c("Observed", "Unobserved"), col = c("black", "blue"), lwd = 4, lty=1, bty="n")
samp_pred_p <- apply(samp$pred_p_f,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:d1$MA) %in% unique(d1$age),"Observed Age","Unobserved Age")
plot(NA, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Female")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:d1$MA, y0 = Lower, x1=  1:d1$MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
# Example 1: Demographic Standardization
# The aim here is to simulate and analyze examplary datasets generated from different processes
# a) Disparities arise only from real demographic differences among populations (e.g. one is older/more men)
# b) Disparities arise only from differences in sampling procedure
# c) Disparities arise from both processes
N <- 500
Age_range <- c(5:90)
####
###
##
# a) Real differences
##
###
####
#Create population array [pop, sex, age]
D <- array(NA,c(2,2,length(Age_range)))
age_seq <- seq(0, 100, 1)
#Exponential distribution (similar to many growing populations)
D[1,1, ] <- dexp(age_seq, 0.03)[Age_range]
D[1,2, ] <- dexp(age_seq, 0.03)[Age_range]
#Skewed normal distribution (similar to many shrinking populations)
D[2,1, ] <- dsn(X, xi = 10, omega = 50, alpha = 1)[Age_range]
D[2,2, ] <- dsn(X, xi = 10, omega = 50, alpha = 1)[Age_range]
par(mfrow = c(1,2))
plot(X, dexp(X,0.03), type = "l", xlim = c(0,100), ylab= "Density", xlab = "Age")
plot(X, dsn(X, xi = 10, omega = 50, alpha = 1), type = "l", xlim = c(0,100), ylab= "Density", xlab = "Age")
#Generate data
d <- data.frame(id = 1:(2*N), soc_id = c(rep(1,N), rep(2,N)), age = NA, gender = NA, outcome = NA)
#Simulate ages from above distributions
for (pop_id in 1:2) {
d$age[d$soc_id==pop_id] <- sample(Age_range, N, replace = TRUE, prob = D[pop_id,1,])
}
#Simulate Genders
d$gender[d$soc_id==1] <- sample(c(1,2),N, replace = TRUE, prob = c(0.55, 0.45))
d$gender[d$soc_id==2] <- sample(c(1,2),N, replace = TRUE, prob = c(0.45, 0.55))
b_age <- 0.5
b_gender <- 1
b_culture <- 2
#Generate observations
for(i in 1:(2*N)) d$outcome[i] <- rbinom(1, 1, inv_logit(b_age*standardize(d$age)[i] + b_gender*(d$gender[i]-1) + b_culture*(d$soc_id[i]-1)  ) )
d1 <- list(N = N,
MA = max(d$age[d$soc_id==1]),
gender = d$gender[d$soc_id==1],
age = d$age[d$soc_id==1],
outcome = d$outcome[d$soc_id==1]
)
d2 <- list(N = N,
MA = max(d$age[d$soc_id==2]),
gender = d$gender[d$soc_id==2],
age = d$age[d$soc_id==2],
outcome = d$outcome[d$soc_id==2]
)
d1$P <- matrix(10, nrow = 2, ncol = d1$MA)
d2$P <- matrix(10, nrow = 2, ncol = d2$MA)
m11 <- stan( model_code  = m2a_MRP_GP_gender_same , data=d1 ,iter = 2000, cores = 1, seed=1, chains=1, control = list(adapt_delta=0.95, max_treedepth = 13))
m12 <- stan( model_code  = m2a_MRP_GP_gender_same , data=d2 ,iter = 2000, cores = 1, seed=1, chains=1, control = list(adapt_delta=0.95, max_treedepth = 13))
par(mfrow = c(1,2))
samp <- extract.samples(m11)
samp_pred_p <- apply(samp$pred_p_m,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:d1$MA) %in% unique(d1$age),"Observed Age","Unobserved Age")
plot(NA, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Male")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:d1$MA, y0 = Lower, x1=  1:d1$MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
legend("topright", c("Observed", "Unobserved"), col = c("black", "blue"), lwd = 4, lty=1, bty="n")
samp_pred_p <- apply(samp$pred_p_f,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:d1$MA) %in% unique(d1$age),"Observed Age","Unobserved Age")
plot(NA, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Female")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:d1$MA, y0 = Lower, x1=  1:d1$MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
par(mfrow = c(1,2))
samp <- extract.samples(m12)
samp_pred_p <- apply(samp$pred_p_m,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:d1$MA) %in% unique(d1$age),"Observed Age","Unobserved Age")
plot(NA, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Male")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:d1$MA, y0 = Lower, x1=  1:d1$MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
legend("topright", c("Observed", "Unobserved"), col = c("black", "blue"), lwd = 4, lty=1, bty="n")
samp_pred_p <- apply(samp$pred_p_f,2,quantile,probs=c(0.05,0.5,0.95))
Lower <- samp_pred_p[1,]
Median <- samp_pred_p[2,]
Higher <- samp_pred_p[3,]
Observed <- ifelse(c(1:d1$MA) %in% unique(d1$age),"Observed Age","Unobserved Age")
plot(NA, type = "l", xlim = c(0,MA), ylim = c(0,1), xlab = "Age", ylab = "p", lwd = 2, lty = 2, main= "Female")
points(Median, col = ifelse(Observed == "Observed Age", "black", "blue"), pch = 16)
segments(x0 = 1:d1$MA, y0 = Lower, x1=  1:d1$MA, y1 = Higher, lwd = 2, col = ifelse(Observed == "Observed Age", "black", "blue"))
