################# LOAD PACKAGES
library(rstan)
library(rethinking)
library(parallel)
library(binom)

################# LOAD DATA

dataset <- read.csv("Model_2_data.csv")

#################

predict.values <- "YES"

################# SELECT MODEL

model = Model_2

################# GENERAL PARAMETERS

col0= 	rgb(0,0,0,255,max=255)
shade0= rgb(0,0,0,70,max=255) 
col1= 	rgb(255,0,0,255,max=255)
shade1= rgb(255,0,0,70,max=255) 
col2= 	rgb(0,0,255,255,max=255)
shade2= rgb(0,0,255,70,max=255) 
col3= 	rgb(0,153,0,255,max=255)
shade3= rgb(0,153,0,70,max=255) 
col4= 	rgb(204,102,0,255,max=255)
shade4= rgb(204,102,0,70,max=255) 
col5= 	rgb(127,0,255,255,max=255)
shade5= rgb(127,0,255,70,max=255) 
col6= 	rgb(153,150,76,255,max=255)
shade6= rgb(153,150,76,70,max=255) 
col7= 	rgb(216,5,202,255,max=255)
shade7= rgb(75,0,153,70,max=255) 
col8= 	rgb(100,100,100,255,max=255)
shade8= rgb(100,100,100,70,max=255) 


################# ESTIMATES FOR BERLIN
berlin <- rep(1, 2)
laplata <- rep(0, 2)
phoenix <- rep(0, 2)
pune <- rep(0, 2)
shuar <- rep(0, 2)
wiichi <- rep(0, 2)
tanna <- rep(0, 2)
d.pred <- list( 
	berlin=berlin,
	laplata=laplata,
	phoenix=phoenix,
	pune=pune,
	shuar=shuar,
	wiichi=wiichi,
	tanna=tanna)
if(predict.values=="YES"){
link <- link(model , n=10000 , data=d.pred)
pred1b <- apply(link , 2 , mean)
pred.PI1b <- apply( link , 2 , PI)}


################# ESTIMATES FOR LA PLATA
berlin <- rep(0, 2)
laplata <- rep(1, 2)
phoenix <- rep(0, 2)
pune <- rep(0, 2)
shuar <- rep(0, 2)
wiichi <- rep(0, 2)
tanna <- rep(0, 2)
d.pred <- list( 
	berlin=berlin,
	laplata=laplata,
	phoenix=phoenix,
	pune=pune,
	shuar=shuar,
	wiichi=wiichi,
	tanna=tanna)
if(predict.values=="YES"){
link <- link(model , n=10000 , data=d.pred)
pred2b <- apply(link , 2 , mean)
pred.PI2b <- apply( link , 2 , PI)}


################# ESTIMATES FOR PHOENIX
berlin <- rep(0, 2)
laplata <- rep(0, 2)
phoenix <- rep(1, 2)
pune <- rep(0, 2)
shuar <- rep(0, 2)
wiichi <- rep(0, 2)
tanna <- rep(0, 2)
d.pred <- list( 
	berlin=berlin,
	laplata=laplata,
	phoenix=phoenix,
	pune=pune,
	shuar=shuar,
	wiichi=wiichi,
	tanna=tanna)
if(predict.values=="YES"){
link <- link(model , n=10000 , data=d.pred)
pred3b <- apply(link , 2 , mean)
pred.PI3b <- apply( link , 2 , PI)}


################# ESTIMATES FOR PUNE
berlin <- rep(0, 2)
laplata <- rep(0, 2)
phoenix <- rep(0, 2)
pune <- rep(1, 2)
shuar <- rep(0, 2)
wiichi <- rep(0, 2)
tanna <- rep(0, 2)
d.pred <- list( 
	berlin=berlin,
	laplata=laplata,
	phoenix=phoenix,
	pune=pune,
	shuar=shuar,
	wiichi=wiichi,
	tanna=tanna)
if(predict.values=="YES"){
link <- link(model , n=10000 , data=d.pred)
pred4b <- apply(link , 2 , mean)
pred.PI4b <- apply( link , 2 , PI)}


################# ESTIMATES FOR SHUAR
berlin <- rep(0, 2)
laplata <- rep(0, 2)
phoenix <- rep(0, 2)
pune <- rep(0, 2)
shuar <- rep(1, 2)
wiichi <- rep(0, 2)
tanna <- rep(0, 2)
d.pred <- list( 
	berlin=berlin,
	laplata=laplata,
	phoenix=phoenix,
	pune=pune,
	shuar=shuar,
	wiichi=wiichi,
	tanna=tanna)
if(predict.values=="YES"){
link <- link(model , n=10000 , data=d.pred)
pred5b <- apply(link , 2 , mean)
pred.PI5b <- apply( link , 2 , PI)}


################# ESTIMATES FOR WÍCHI
berlin <- rep(0, 2)
laplata <- rep(0, 2)
phoenix <- rep(0, 2)
pune <- rep(0, 2)
shuar <- rep(0, 2)
wiichi <- rep(1, 2)
tanna <- rep(0, 2)
d.pred <- list( 
	berlin=berlin,
	laplata=laplata,
	phoenix=phoenix,
	pune=pune,
	shuar=shuar,
	wiichi=wiichi,
	tanna=tanna)
if(predict.values=="YES"){
link <- link(model , n=10000 , data=d.pred)
pred6b <- apply(link , 2 , mean)
pred.PI6b <- apply( link , 2 , PI)}



################# ESTIMATES FOR TANNA
berlin <- rep(0, 2)
laplata <- rep(0, 2)
phoenix <- rep(0, 2)
pune <- rep(0, 2)
shuar <- rep(0, 2)
wiichi <- rep(0, 2)
tanna <- rep(1, 2)
d.pred <- list( 
	berlin=berlin,
	laplata=laplata,
	phoenix=phoenix,
	pune=pune,
	shuar=shuar,
	wiichi=wiichi,
	tanna=tanna)
if(predict.values=="YES"){
link <- link(model , n=10000 , data=d.pred)
pred7b <- apply(link , 2 , mean)
pred.PI7b <- apply( link , 2 , PI)}




################# PLOTTING MODEL ESTIMATES

cexset = 1.3

plot( dataset$age_c , type="n" , xlab="", ylab="Prob. of judging GENEROUS to be more correct" , axes=FALSE, ylim=c(0,1) , xlim=c(min(.5),max(7.5)), cex.lab=cexset)
title(main="(2b) Model 2 Results:\nAdults' judgments about correct\nnorms vary across societies", cex.main=cexset, sub="", cex.sub=cexset)
lablist <- as.vector(c("Berlin, DEU","La Plata, ARG","Phoenix, USA","   Pune, IND","   Shuar, ECU","Wíchi, ARG","Tanna, VUT"))
axis(1, at=seq(1,7,by=(1)), lab=FALSE)
text(seq(1,7,by=(1))-0.25, y=-0.08, par("usr")[3] - 0.0, labels = lablist, srt = 90, pos = NULL, xpd = TRUE, cex.axis=1, las=2, adj = c(1,1), col=c(col1,col2,col3,col4,col5,col6,col7,col8), cex=cexset)
axis(2, at=seq(0,1,by=(.5)), lab=seq(0,1,by=(.5)), cex.axis=cexset)    
abline(a=.5, b=0)


y=.3
x=0
x=x+1
lines( c(x-y,x+y) , pred1b, lwd=2, lty=1 , col=col1)
shade( pred.PI1b , c(x-y,x+y)  , col=shade1 )

x=x+1
lines( c(x-y,x+y) , pred2b, lwd=2, lty=1 , col=col2)
shade( pred.PI2b , c(x-y,x+y)  , col=shade2 )

x=x+1
lines( c(x-y,x+y) , pred3b, lwd=2, lty=1 , col=col3)
shade( pred.PI3b , c(x-y,x+y)  , col=shade3 )

x=x+1
lines( c(x-y,x+y) , pred4b, lwd=2, lty=1 , col=col4)
shade( pred.PI4b , c(x-y,x+y)  , col=shade4 )

x=x+1
lines( c(x-y,x+y) , pred5b, lwd=2, lty=1 , col=col5)
shade( pred.PI5b , c(x-y,x+y)  , col=shade5 )

x=x+1
lines( c(x-y,x+y) , pred6b, lwd=2, lty=1 , col=col6)
shade( pred.PI6b , c(x-y,x+y)  , col=shade6 )

x=x+1
lines( c(x-y,x+y) , pred7b, lwd=2, lty=1 , col=col7)
shade( pred.PI7b , c(x-y,x+y)  , col=shade7 )



################# PLOTTING MEANS

means <- matrix(nrow = length(unique(dataset$fieldid)), ncol = 4)
for (i in 1:(length(unique(dataset$fieldid)))){
x <- (binom.confint(sum(dataset[dataset$fieldid==i,]$T5_ad_choice_1yes), length(dataset[dataset$fieldid==i,]$T5_ad_choice_1yes),conf.level = 0.95,methods="exact"))
means[i,1] <- x[["mean"]]
means[i,2] <- x[["lower"]]
means[i,3] <- x[["upper"]]
means[i,4] <- (i)
}

dt1 = 19
dt2 = 17

points(pch=c(dt1,dt1,dt1,dt1,dt1,dt1,dt1), col=c(col1,col2,col3,col4,col5,col6,col7), lwd=1, cex=1.5,x=means[,4],y=means[,1])

segments(means[1,4], means[1,2], means[1,4], means[1,3], col = col1 )
segments(means[2,4], means[2,2], means[2,4], means[2,3], col = col2 )
segments(means[3,4], means[3,2], means[3,4], means[3,3], col = col3 )
segments(means[4,4], means[4,2], means[4,4], means[4,3], col = col4 )
segments(means[5,4], means[5,2], means[5,4], means[5,3], col = col5 )
segments(means[6,4], means[6,2], means[6,4], means[6,3], col = col6 )
segments(means[7,4], means[7,2], means[7,4], means[7,3], col = col7 )

